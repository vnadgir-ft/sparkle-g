<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright 2007-2010 The sparkle-g Team

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->

<!--
    author: Simone Tripodi (simone.tripodi)
    version: $Id$
-->
<document xmlns="http://maven.apache.org/changes/1.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/changes/1.0.0 http://maven.apache.org/plugins/maven-changes-plugin/xsd/changes-1.0.0.xsd">
    <properties>
        <author email="simone dot tripodi at gmail dot com">Simone Tripodi</author>
        <title>Introduction</title>
    </properties>

    <body>
        <release version="4.0" date="TBD" description="upgrade release">
            <action dev="Juergen.Pfundt" type="add">
                Update of grammar to current definition of Sparql 1.1 at http://www.w3.org/TR/sparql11-query, 
                which includes Sparql Update. This refers to the version of 1th of May 2011.
                
                Some questions regarding various rules still remain open and have an effect on the test cases.
                
                1)  The Sparql.g lexer rule for PN_LOCAL must be refined, as it does not cope with trailing '.'.
                    Syntactic predicates and/or greedy=false did not solve the problem of recognizing properly
                    e.g. A.b. as two tokens PN_LOCAL A.b and DOT 
                
                       PN_LOCAL : (PN_CHARS_U|DIGIT) ((PN_CHARS|DOT)* PN_CHARS)?;
                       
                2)  The w3.org rule
                
                       TriplesBlock	  ::=  	TriplesSameSubjectPath ( '.' TriplesBlock? )?
                       
                    should correctly be written as follows
                    
                       TriplesBlock	  ::=  	TriplesSameSubjectPath ( '.' TriplesBlock? )*
                       
                3)  The w3.org rule for Update commands allows a prologue without any update command to follow.
                    
                       Update	  ::=  	Prologue ( Update1 ( ';' Update )? )?
	
                    The Sparql.g grammar expects at least one update command.

	 	                   query  = update ( SEMICOLON update)*
	 	                   update = prologue (load | clear | drop | create | insert | delete | modify)
	
                    What is the effect of an update command consisting of a prologue only ?
                    
                4)  The w3.org rule for PropertyListNotEmpty rule allows a list of ';' between any
                    (Verb ObjectList) pattern or at the end of the rule.

	 	                   PropertyListNotEmpty ::= Verb ObjectList ( ';' ( Verb ObjectList )? )*
	 
	                  The Sparql.g grammar follows this behaviour:
	 
	 	                   propertyListNotEmpty : verb objectList ( SEMICOLON ( verb objectList )? )* 
	 
	                  It does not hurt to have a sequence, e.g.
	 
	                     verb objectList ;;;; verb objectList;;;; 
	 
	                  instead of
	 
	 	                  verb objectList; verb objectList
	 
	                  which can be achieved by
	 
	 	                  propertyListNotEmpty : verb objectList (SEMICOLON verb objectList)* 

                    but it would be more consistent.
                    
                5)  The PropertyListNotEmptyPath of the w3.org rule has also embedded a way to generate a sequence of ';'.
                    The Sparql.g grammar follows this behaviour. 
                    
                6)  The triplesBlock now allows sequences of '.' (DOTS).
                
                
            </action>
            <action dev="Juergen.Pfundt" type="add">
                Added AST creation.
            </action>
            <action dev="Juergen.Pfundt" type="add">
                Added finite state automaton for replacing Unicode escape sequences '\\uxxxx' 
                with character values. Incomplete Unicode escape sequences are written
                back unchanged in the file stream.
                Optimizations to avoid write operations lead to MODIFIED_DATA_STATE 
                and data_buffer_modified. The rationale for deviations from pure doctrine 
                where to keep the number of status small.
                In the usual case of no Unicode escape sequences in the data stream 
                the maxime is to do (nearly) nothing, just loop in the START_STATE.
                Incomplete Unicode escape sequences are left as found in the file stream. 
            </action>
            <action dev="Juergen.Pfundt" type="add">
                Update of grammar to current definition of Sparql 1.1 at http://www.w3.org/TR/sparql11-query, 
                which includes Sparql Update. This refers to the version of 14th of October 2010.
                Codepoint escape sequences are not accounted in this grammar. As mentioned in the 
                W3C Working Draft 14 October 2010 in chapter 18.2 "Codepoint Escape Sequences":
                "...Codepoint escape sequences can appear anywhere in the query string. 
                They are processed before parsing based on the grammar rules and so may be replaced
                by codepoints with significance in the grammar, such as ":" marking a prefixed name...."
            </action>
        </release>
        
        <release version="3.0" date="TBD" description="upgrade release">
            <action dev="simone.tripodi" type="add">
                Improved Maven2 build
            </action>
            <action dev="simone.tripodi" type="add">
                Switched to 99soft.org infra
            </action>
        </release>

        <release version="2.0" date="2009-11-28" description="upgrade release">
            <action dev="simone.tripodi" type="fix">
                Switched to commercial friendly Apache 2.0 License
            </action>
            <action dev="simone.tripodi" type="add">
                Switched to Maven2 build
            </action>
        </release>

        <release version="1.1" date="2008-01-21" description="Bugfix release">
            <action dev="Juergen.Pfundt" type="fix">
                Fixed antlr3 warnings emitted when compiling the Sparql.g file
            </action>
            <action dev="Juergen.Pfundt" type="add">
                Added lexical rule "ANY" as fallback, in case no lexical rule matches
            </action>
            <action dev="Juergen.Pfundt" type="fix" issue="1">
                Recognition of keywords (including "true" and "false") is case insensitive now
            </action>
            <action dev="Juergen.Pfundt" type="add">
                Implemented lexical rule for comments
            </action>
            <action dev="Juergen.Pfundt" type="fix">
                Solved problem with graphterm and blankNode which implicitely
                referenced WS via lexical rules NIL and ANON. As WS sends its content
                to channel hidden this resulted in problems with WS before and after
                braces
            </action>
            <action dev="Juergen.Pfundt" type="add" issue="2">
                Added a few test cases to the test suite referenced in W3C SPARQL specifications.
                Modified one test case to test "comments".
                Test cases still have to be enhanced!
            </action>
            <action dev="Juergen.Pfundt" type="add" issue="3">
                Replaced parser literals by lexer tokens as preparation for AST generation
            </action>
            <action dev="simone.tripodi" type="add" issue="3">
                Replaced parser literal IRI_REF by lexer tokens as preparation for AST generation
            </action>
            <action dev="Juergen.Pfundt" type="add" issue="1">
                The A token is case insensitive now as requested by the w3.org rdf-sparql-query document
            </action>
            <action dev="Juergen.Pfundt" type="add" issue="2">
                Added DAWG Testcases
            </action>
        </release>

        <release version="1.0" date="2007-10-30" description="First release">
            <action dev="michele.mostarda, simone.tripodi" type="update">
                First version of the cross platform SPARQL Grammar.
            </action>
        </release>
    </body>

</document>
