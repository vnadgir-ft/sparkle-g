<!--
    Copyright 2007 the original author or authors.

    All rights reserved.

    Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following
    conditions are met:

    Redistributions of source code must retain the above copyright notice, this list of conditions and the following
    disclaimer.

    Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
    disclaimer in the documentation and/or other materials provided with the distribution.

    Neither the name of the author or authors nor the names of its contributors may be used to endorse or promote
    products derived from this software without specific prior written permission.

    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
    A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
    CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
    EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
    LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
    NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
    SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

    @author Simone Tripodi   (simone.tripodi)
    @author Michele Mostarda (michele.mostarda)
    @author Juergen Pfundt   (Juergen.Pfundt)
    @version $Id$
-->
<project name="sparkle-g" basedir="." default="test"
    xmlns:antlr3="antlib:org.apache.tools.ant.antlr"
    xmlns:svn="antlib:org.tigris.subversion.svnant"
    xmlns:ivy="antlib:fr.jayasoft.ivy.ant">

    <property file="conf/build.properties"/>

    <path id="antlib.classpath">
        <fileset dir="${ant.tools.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <taskdef uri="antlib:org.apache.tools.ant.antlr" resource="org/apache/tools/ant/antlr/antlib.xml" classpathref="antlib.classpath"/>
    <taskdef uri="antlib:org.tigris.subversion.svnant" resource="org/tigris/subversion/svnant/antlib.xml" classpathref="antlib.classpath"/>
    <taskdef uri="antlib:fr.jayasoft.ivy.ant" resource="fr/jayasoft/ivy/ant/antlib.xml" classpathref="antlib.classpath"/>

    <ivy:configure file="conf/ivyconf.xml"/>

    <target name="init">
        <mkdir dir="${src.java.dir}"/>
        <mkdir dir="${target.classes.dir}"/>
        <mkdir dir="${target.doc.dir}"/>
    </target>

    <macrodef name="antlr.tool">
       <attribute name="grammar.name"/>
       <attribute name="package" default="${package}"/>
       <sequential>
              <ivy:retrieve useOrigin="true" conf="compile-time" pattern="${lib.artifact.pattern}" />
              <antlr3:antlr3 target="${src.grammar.dir}/@{grammar.name}" 
                  outputdirectory="${src.java.dir}/@{package}"
                  multithreaded="true"
                  depend="false"
                  report="true"
                  debug="false"
                  profile="false">
                  <jvmarg value="-Xmx256m" />
                  <classpath>
                      <fileset dir="${ivy.lib.dir}/compile-time">
                          <include name="*.jar"/>
                      </fileset>
                  </classpath>
              </antlr3:antlr3>
        </sequential>
    </macrodef>

    <target name="compile" depends="init">
        <antlr.tool grammar.name="Sparql.g"/>
        <javac srcdir="${src.java.dir}"
            destdir="${target.classes.dir}"
            verbose="true"
            optimize="true"
            debug="true">
            <classpath>
                <fileset dir="${ivy.lib.dir}/compile-time"/>
            </classpath>
        </javac>
    </target>

    <target name="test" depends="compile" description="Compiles and tests the SPARQL grammar">
        <ivy:retrieve useOrigin="true" conf="runtime,test" pattern="${lib.artifact.pattern}"/>
        <java classname="${test.classname}" fork="true" maxmemory="512M">
            <classpath>
                <fileset dir="${ivy.lib.dir}/runtime"/>
                <fileset dir="${ivy.lib.dir}/test"/>
                <pathelement location="${target.classes.dir}"/>
            </classpath>
            <arg value="${test.grammar.dir}/Sparql.testsuite"/>
        </java>
    </target>

    <target name="doc" description="generate documentation" depends="compile">
       <javadoc destdir="${target.doc.dir}"
                author="true"
                version="true"
                use="true"
                windowtitle="${ant.project.name} API"
                protected="all"
                private="all"
                public="all"
                locale="en"
                linksource="yes"
                breakiterator="yes">
           <fileset dir="${src.java.dir}">
               <include name="**/*.java"/>
           </fileset>
           <classpath>
               <fileset dir="${ivy.lib.dir}/compile-time"/>
               <fileset dir="${ivy.lib.dir}/runtime"/>
           </classpath>
       </javadoc>
    </target>

    <target name="clean">
        <delete verbose="true" includeemptydirs="true">
            <fileset dir="${src.java.dir}"/>
            <fileset dir="${target.dir}"/>
            <fileset dir="${ivy.lib.dir}"/>
        </delete>
    </target>

    <target name="release" depends="clean, test">
        <svn:svn javahl="false">
            <status path="." revisionProperty="svn.revision" />
        </svn:svn>
        <tstamp>
            <format pattern="yyyyMMddHHmmss" property="build.timestamp" />
        </tstamp>
        <condition property="publish.revision" value="${ivy.revision}">
            <equals arg1="${project.status}" arg2="release"/>
        </condition>
        <condition property="publish.revision" value="${ivy.revision}-r${svn.revision}-dev">
            <equals arg1="${project.status}" arg2="integration"/>
        </condition>
        <condition property="publish.revision" value="${ivy.revision}-r${svn.revision}-dev${build.timestamp}">
            <equals arg1="${project.status}" arg2="development"/>
        </condition>

        <property name="tmp.dir" value="${target.dir}/releases/Sparql-${publish.revision}"/>
        <mkdir dir="${tmp.dir}"/>
        <copy todir="${tmp.dir}">
            <fileset file="${src.grammar.dir}/Sparql.g"/>
            <fileset dir="${src.htmldoc.dir}"/>
        </copy>
        <zip destfile="${tmp.dir}.zip" basedir="${tmp.dir}"/>
        <delete verbose="true" includeemptydirs="true">
            <fileset dir="${tmp.dir}"/>
        </delete>
    </target>

</project>
